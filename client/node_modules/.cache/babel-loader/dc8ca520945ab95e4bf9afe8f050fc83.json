{"ast":null,"code":"import _defineProperty from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/src/components/sign-up/sign-up.component.jsx\";\n\nimport React, { useState } from 'react';\nimport './sign-up.styles.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\nimport { signUpStartAction } from '../../redux/user/user.actions';\n\nvar SignUp = function SignUp(_ref) {\n  var signUp = _ref.signUp;\n\n  var _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      credentials = _useState2[0],\n      setCredentials = _useState2[1];\n\n  var displayName = credentials.displayName,\n      email = credentials.email,\n      password = credentials.password,\n      confirmPassword = credentials.confirmPassword;\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!(password !== confirmPassword)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", alert(\"Passwords don't match\"));\n\n            case 3:\n              signUp({\n                email: email,\n                password: password,\n                displayName: displayName\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name;\n    setCredentials(_objectSpread({}, credentials, _defineProperty({}, name, value)));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    action: \"\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    handleChange: handleChange,\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    handleChange: handleChange,\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    handleChange: _this.handleChange,\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    handleChange: _this.handleChange,\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Sign Up\"))));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signUp: function signUp(credentials) {\n      return dispatch(signUpStartAction(credentials));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","Button","signUpStartAction","SignUp","signUp","displayName","email","password","confirmPassword","credentials","setCredentials","handleSubmit","e","preventDefault","alert","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './sign-up.styles.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\n\nimport { signUpStartAction } from '../../redux/user/user.actions';\nconst SignUp = ({ signUp }) => {\n  const [credentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const { displayName, email, password, confirmPassword } = credentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      return alert(\"Passwords don't match\");\n    }\n    signUp({ email, password, displayName });\n  };\n  const handleChange = e => {\n    const { value, name } = e.target;\n    setCredentials({ ...credentials, [name]: value });\n  };\n\n  return (\n    <div className='sign-up'>\n      <h2 className='Title'>I do not have an account</h2>\n      <span>Sign up with your email and password</span>\n      <form className='sign-up-form' action='' onSubmit={handleSubmit}>\n        <FormInput\n          handleChange={handleChange}\n          type='text'\n          name='displayName'\n          value={displayName}\n          label='Display Name'\n          required\n        />\n        <FormInput\n          handleChange={handleChange}\n          type='email'\n          name='email'\n          value={email}\n          label='Email'\n          required\n        />\n        <FormInput\n          handleChange={this.handleChange}\n          type='password'\n          name='password'\n          value={password}\n          label='password'\n          required\n        />\n        <FormInput\n          handleChange={this.handleChange}\n          type='password'\n          name='confirmPassword'\n          value={confirmPassword}\n          label='Confirm Password'\n          required\n        />\n        <div className='buttons'>\n          <Button type='submit'>Sign Up</Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: credentials => dispatch(signUpStartAction(credentials)),\n});\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(SignUp);\n"]},"metadata":{},"sourceType":"module"}