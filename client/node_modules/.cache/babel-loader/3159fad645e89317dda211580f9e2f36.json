{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar config = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATBASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\nfirebase.initializeApp(config);\nexport var createUserProfile =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(userAuth, additionalData) {\n    var userRef, snapShot, displayName, email, createdAt;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (userAuth) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n            _context.next = 5;\n            return userRef.get();\n\n          case 5:\n            snapShot = _context.sent;\n\n            if (snapShot.exists) {\n              _context.next = 17;\n              break;\n            }\n\n            displayName = userAuth.displayName, email = userAuth.email;\n            createdAt = new Date();\n            _context.prev = 9;\n            _context.next = 12;\n            return userRef.set(_objectSpread({\n              displayName: displayName,\n              email: email,\n              createdAt: createdAt\n            }, additionalData));\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](9);\n            console.log('error creating user', _context.t0.message);\n\n          case 17:\n            return _context.abrupt(\"return\", userRef);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 14]]);\n  }));\n\n  return function createUserProfile(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var addCollection =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(collection, objsToAdd) {\n    var collectionRef, batch;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            collectionRef = firestore.collection(collection);\n            console.log(collectionRef);\n            batch = firestore.batch();\n            objsToAdd.forEach(function (obj) {\n              var newDocRef = collectionRef.doc();\n              batch.set(newDocRef, obj);\n            });\n            _context2.next = 6;\n            return batch.commit();\n\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addCollection(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var convertCollectionsSnapshotToMap = function convertCollectionsSnapshotToMap(collections) {\n  var transformCollection = collections.docs.map(function (doc) {\n    var _doc$data = doc.data(),\n        title = _doc$data.title,\n        items = _doc$data.items;\n\n    console.log(doc.data()); // return {\n    //   routeName: encodeURI(title),\n    //   id: doc.id,\n    //   title,\n    //   items,\n    // };\n  });\n  console.log(transformCollection);\n};\nexport var auth = firebase.auth();\nexport var firestore = firebase.firestore();\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport var signInWithGoogle = function signInWithGoogle() {\n  return auth.signInWithPopup(provider);\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","process","env","REACT_APP_FIREBASE_KEY","authDomain","REACT_APP_FIREBASE_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATBASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDERID","appId","REACT_APP_FIREBASE_APP_ID","initializeApp","createUserProfile","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","addCollection","collection","objsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformCollection","docs","map","data","title","items","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATBASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfile = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollection = async (collection, objsToAdd) => {\n  const collectionRef = firestore.collection(collection);\n  console.log(collectionRef);\n  const batch = firestore.batch();\n  objsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n    console.log(doc.data())\n    // return {\n    //   routeName: encodeURI(title),\n    //   id: doc.id,\n    //   title,\n    //   items,\n    // };\n  });\n  console.log(transformCollection)\n\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}