{"ast":null,"code":"import _classCallCheck from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport WithSpinner from '../../hoc/with-spinner/with-spinner.component';\nimport Collection from '../collection/collection.component';\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport { startCollectionFetchActionAsync as _startCollectionFetchActionAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nvar CollectionWithSpinner = WithSpinner(Collection);\n\nvar ShopPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShopPage, _React$Component);\n\n  function ShopPage() {\n    _classCallCheck(this, ShopPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShopPage).apply(this, arguments));\n  }\n\n  _createClass(ShopPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.startCollectionFetchActionAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n      return React.createElement(\"div\", {\n        className: \"shop-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(match.path),\n        component: CollectionOverviewContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(match.path, \"/:collectionId\"),\n        render: function render(props) {\n          return React.createElement(CollectionWithSpinner, Object.assign({\n            isLoading: !isCollectionsLoaded\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ShopPage;\n}(React.Component);\n\nvar mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    startCollectionFetchActionAsync: function startCollectionFetchActionAsync() {\n      return dispatch(_startCollectionFetchActionAsync());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","WithSpinner","Collection","CollectionOverviewContainer","startCollectionFetchActionAsync","selectIsCollectionsLoaded","CollectionWithSpinner","ShopPage","props","match","isCollectionsLoaded","path","Component","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,WAAP,MAAwB,+CAAxB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,2BAAP,MAAwC,oEAAxC;AAEA,SAASC,+BAA+B,IAA/BA,gCAAT,QAAgD,+BAAhD;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,IAAMC,qBAAqB,GAAGL,WAAW,CAACC,UAAD,CAAzC;;IAEMK,Q;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWJ,+BAAX;AACD;;;6BACQ;AAAA,wBACgC,KAAKI,KADrC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,mBADR,eACQA,mBADR;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFN;AAGE,QAAA,SAAS,EAAER,2BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,KAAD;AACE,QAAA,IAAI,YAAKM,KAAK,CAACE,IAAX,mBADN;AAEE,QAAA,MAAM,EAAE,gBAAAH,KAAK;AAAA,iBACX,oBAAC,qBAAD;AACE,YAAA,SAAS,EAAE,CAACE;AADd,aAEMF,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADW;AAAA,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAkBD;;;;EAxBoBX,KAAK,CAACe,S;;AA2B7B,IAAMC,eAAe,GAAGb,wBAAwB,CAAC;AAC/CU,EAAAA,mBAAmB,EAAEL;AAD0B,CAAD,CAAhD;;AAGA,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCX,IAAAA,+BAA+B,EAAE;AAAA,aAC/BW,QAAQ,CAACX,gCAA+B,EAAhC,CADuB;AAAA;AADK,GAAL;AAAA,CAAnC;;AAIA,eAAeL,OAAO,CACpBc,eADoB,EAEpBC,kBAFoB,CAAP,CAGbP,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport WithSpinner from '../../hoc/with-spinner/with-spinner.component';\nimport Collection from '../collection/collection.component';\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\n\nimport { startCollectionFetchActionAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    this.props.startCollectionFetchActionAsync();\n  }\n  render() {\n    const { match, isCollectionsLoaded } = this.props;\n    return (\n      <div className='shop-page'>\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionWithSpinner\n              isLoading={!isCollectionsLoaded}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded,\n});\nconst mapDispatchToProps = dispatch => ({\n  startCollectionFetchActionAsync: () =>\n    dispatch(startCollectionFetchActionAsync()),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}