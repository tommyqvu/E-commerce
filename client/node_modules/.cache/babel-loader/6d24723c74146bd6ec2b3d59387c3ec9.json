{"ast":null,"code":"import _toConsumableArray from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport var updatedObject = function updatedObject(oldObj, updatedVals) {\n  return _objectSpread({}, oldObj, updatedVals);\n};\nexport var addItemToCart = function addItemToCart(cartItems, cartItemToAdd) {\n  var existingCartItem = cartItems.find(function (item) {\n    return item.id === cartItemToAdd.id;\n  });\n\n  if (existingCartItem) {\n    return cartItems.map(function (cartItem) {\n      return cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n        quantity: cartItem.quantity + 1\n      }) : cartItem;\n    });\n  }\n\n  return [].concat(_toConsumableArray(cartItems), [_objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })]);\n};\nexport var removeItemFromCart = function removeItemFromCart(cartItems, cartItemId) {\n  return cartItems.filter(function (item) {\n    return item.id !== cartItemId;\n  });\n};\nexport var decreaseQuantity = function decreaseQuantity(cartItems, cartItemId) {\n  var existingCartItem = cartItems.find(function (item) {\n    return item.id === cartItemId;\n  });\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(function (item) {\n      return item.id !== cartItemId;\n    });\n  }\n\n  return cartItems.map(function (cartItem) {\n    return cartItem.id === cartItemId ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity - 1\n    }) : cartItem;\n  });\n};","map":{"version":3,"sources":["/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/src/redux/util.js"],"names":["updatedObject","oldObj","updatedVals","addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","item","id","map","cartItem","quantity","removeItemFromCart","cartItemId","filter","decreaseQuantity"],"mappings":";;AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAASC,WAAT,EAAyB;AACpD,2BACKD,MADL,EAEKC,WAFL;AAID,CALM;AAOP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD,EAAYC,aAAZ,EAA8B;AACzD,MAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAe,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAA9B;AAAA,GAAnB,CAAzB;;AACA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAc,UAAAC,QAAQ;AAAA,aAC3BA,QAAQ,CAACF,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACSE,QADT;AACmBC,QAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,GAAoB;AADjD,WAEID,QAHuB;AAAA,KAAtB,CAAP;AAKD;;AACD,sCAAWP,SAAX,sBAA2BC,aAA3B;AAA0CO,IAAAA,QAAQ,EAAE;AAApD;AACD,CAVM;AAYP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACT,SAAD,EAAYU,UAAZ,EAA2B;AAC3D,SAAOV,SAAS,CAACW,MAAV,CAAiB,UAAAP,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYK,UAAhB;AAAA,GAArB,CAAP;AACD,CAFM;AAIP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACZ,SAAD,EAAYU,UAAZ,EAA2B;AACzD,MAAMR,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAe,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYK,UAAhB;AAAA,GAAnB,CAAzB;;AACA,MAAIR,gBAAgB,CAACM,QAAjB,KAA8B,CAAlC,EAAqC;AACnC,WAAOR,SAAS,CAACW,MAAV,CAAiB,UAAAP,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAL,KAAYK,UAAhB;AAAA,KAArB,CAAP;AACD;;AACD,SAAOV,SAAS,CAACM,GAAV,CAAc,UAAAC,QAAQ;AAAA,WAC3BA,QAAQ,CAACF,EAAT,KAAgBK,UAAhB,qBACSH,QADT;AACmBC,MAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,GAAoB;AADjD,SAEID,QAHuB;AAAA,GAAtB,CAAP;AAKD,CAVM","sourcesContent":["export const updatedObject = (oldObj, updatedVals) => {\n  return {\n    ...oldObj,\n    ...updatedVals,\n  };\n};\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(item => item.id === cartItemToAdd.id);\n  if (existingCartItem) {\n    return cartItems.map(cartItem =>\n      cartItem.id === cartItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem,\n    );\n  }\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemId) => {\n  return cartItems.filter(item => item.id !== cartItemId);\n};\n\nexport const decreaseQuantity = (cartItems, cartItemId) => {\n  const existingCartItem = cartItems.find(item => item.id === cartItemId);\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(item => item.id !== cartItemId)\n  }\n  return cartItems.map(cartItem =>\n    cartItem.id === cartItemId\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem,\n  );\n};\n"]},"metadata":{},"sourceType":"module"}