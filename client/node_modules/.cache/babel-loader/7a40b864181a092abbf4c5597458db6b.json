{"ast":null,"code":"import _defineProperty from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport './sign-up.styles.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\nimport { auth, createUserProfile } from '../../firebase/firebase.utils';\nimport { signUpStartAction } from '../../redux/user/user.actions';\n\nvar SignUp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignUp, _React$Component);\n\n  function SignUp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, displayName, email, password, confirmPassword;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = _this.state, displayName = _this$state.displayName, email = _this$state.email, password = _this$state.password, confirmPassword = _this$state.confirmPassword;\n\n                if (!(password !== confirmPassword)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", alert(\"Passwords don't match\"));\n\n              case 4:\n                _this.props.signUp({\n                  email: email,\n                  password: password,\n                  displayName: displayName\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChange = function (e) {\n      var _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n      return React.createElement(\"div\", {\n        className: \"sign-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"I do not have an account\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n        className: \"sign-up-form\",\n        action: \"\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(FormInput, {\n        handleChange: this.handleChange,\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        label: \"Display Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        handleChange: this.handleChange,\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        label: \"Email\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        handleChange: this.handleChange,\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        label: \"password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(FormInput, {\n        handleChange: this.handleChange,\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        label: \"Confirm Password\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Sign Up\"))));\n    }\n  }]);\n\n  return SignUp;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signUp: function signUp(credentials) {\n      return dispatch(signUpStartAction(credentials));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","Button","auth","createUserProfile","signUpStartAction","SignUp","state","displayName","email","password","confirmPassword","handleSubmit","e","preventDefault","alert","props","signUp","handleChange","target","value","name","setState","Component","mapDispatchToProps","dispatch","credentials"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './sign-up.styles.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\n\nimport { auth, createUserProfile } from '../../firebase/firebase.utils';\nimport { signUpStartAction } from '../../redux/user/user.actions';\nclass SignUp extends React.Component {\n  state = {\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n  handleSubmit = async e => {\n    e.preventDefault();\n    const { displayName, email, password, confirmPassword } = this.state;\n    if (password !== confirmPassword) {\n      return alert(\"Passwords don't match\");\n    }\n    this.props.signUp({ email, password, displayName });\n  };\n  handleChange = e => {\n    const { value, name } = e.target;\n    this.setState({ [name]: value });\n  };\n  render() {\n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n      <div className='sign-up'>\n        <h2 className='Title'>I do not have an account</h2>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' action='' onSubmit={this.handleSubmit}>\n          <FormInput\n            handleChange={this.handleChange}\n            type='text'\n            name='displayName'\n            value={displayName}\n            label='Display Name'\n            required\n          />\n          <FormInput\n            handleChange={this.handleChange}\n            type='email'\n            name='email'\n            value={email}\n            label='Email'\n            required\n          />\n          <FormInput\n            handleChange={this.handleChange}\n            type='password'\n            name='password'\n            value={password}\n            label='password'\n            required\n          />\n          <FormInput\n            handleChange={this.handleChange}\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            label='Confirm Password'\n            required\n          />\n          <div className='buttons'>\n            <Button type='submit'>Sign Up</Button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  signUp: credentials => dispatch(signUpStartAction(credentials)),\n});\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(SignUp);\n"]},"metadata":{},"sourceType":"module"}