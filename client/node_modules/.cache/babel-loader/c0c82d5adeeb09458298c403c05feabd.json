{"ast":null,"code":"import { toggleCart, addItem, removeItem, decrease, clearCart } from '../actionTypes';\nimport { updatedObject, addItemToCart, removeItemFromCart, decreaseQuantity } from '../util';\nvar INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case toggleCart:\n      return updatedObject(state, {\n        hidden: !state.hidden\n      });\n\n    case addItem:\n      return updatedObject(state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case removeItem:\n      return updatedObject(state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case decrease:\n      return updatedObject(state, {\n        cartItems: decreaseQuantity(state.cartItems, action.payload)\n      });\n\n    case clearCart:\n      return updatedObject(state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/src/redux/cart/cart.reducer.js"],"names":["toggleCart","addItem","removeItem","decrease","clearCart","updatedObject","addItemToCart","removeItemFromCart","decreaseQuantity","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","payload"],"mappings":"AAAA,SACEA,UADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,gBANP;AAOA,SACEC,aADF,EAEEC,aAFF,EAGEC,kBAHF,EAIEC,gBAJF,QAKO,SALP;AAMA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,UAAL;AACE,aAAOK,aAAa,CAACQ,KAAD,EAAQ;AAAEH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAAjB,OAAR,CAApB;;AACF,SAAKT,OAAL;AACE,aAAOI,aAAa,CAACQ,KAAD,EAAQ;AAC1BF,QAAAA,SAAS,EAAEL,aAAa,CAACO,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AADE,OAAR,CAApB;;AAGF,SAAKd,UAAL;AACE,aAAOG,aAAa,CAACQ,KAAD,EAAQ;AAC1BF,QAAAA,SAAS,EAAEJ,kBAAkB,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AADH,OAAR,CAApB;;AAGF,SAAKb,QAAL;AACE,aAAOE,aAAa,CAACQ,KAAD,EAAQ;AAC1BF,QAAAA,SAAS,EAAEH,gBAAgB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AADD,OAAR,CAApB;;AAGF,SAAKZ,SAAL;AACE,aAAOC,aAAa,CAACQ,KAAD,EAAQ;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAR,CAApB;;AACF;AACE,aAAOE,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,WAAf","sourcesContent":["import {\n  toggleCart,\n  addItem,\n  removeItem,\n  decrease,\n  clearCart,\n} from '../actionTypes';\nimport {\n  updatedObject,\n  addItemToCart,\n  removeItemFromCart,\n  decreaseQuantity,\n} from '../util';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: [],\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case toggleCart:\n      return updatedObject(state, { hidden: !state.hidden });\n    case addItem:\n      return updatedObject(state, {\n        cartItems: addItemToCart(state.cartItems, action.payload),\n      });\n    case removeItem:\n      return updatedObject(state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload),\n      });\n    case decrease:\n      return updatedObject(state, {\n        cartItems: decreaseQuantity(state.cartItems, action.payload),\n      });\n    case clearCart:\n      return updatedObject(state, { cartItems: [] });\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}