{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/src/components/collection-overview/collection-overview.container.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    collections {\\n      id\\n      title\\n      items {\\n        id\\n        name\\n        price\\n        imageUrl\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport CollectionOverview from './collection-overview.component';\nimport Spinner from '../spinner/spinner.component';\nvar GET_COLLECTIONS = gql(_templateObject());\n\nvar CollectionOverviewContainer = function CollectionOverviewContainer() {\n  return React.createElement(Query, {\n    query: GET_COLLECTIONS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, function (_ref) {\n    var loading = _ref.loading,\n        error = _ref.error,\n        data = _ref.data;\n    console.log({\n      loading: loading\n    });\n    console.log({\n      error: error\n    });\n    console.log({\n      data: data\n    });\n    if (loading) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n    return React.createElement(CollectionOverview, {\n      collections: data.collections,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  });\n};\n\nexport default CollectionOverviewContainer; // import { connect } from 'react-redux';\n// import { compose } from 'redux';\n// import { createStructuredSelector } from 'reselect';\n// import { selectIsCollectionFetching } from '../../redux/shop/shop.selector';\n// import WithSpinner from '../../hoc/with-spinner/with-spinner.component';\n// import CollectionOverview from './collection-overview.component';\n// const mapStateToProps = createStructuredSelector({\n//   isLoading: selectIsCollectionFetching,\n// });\n// const CollectionOverviewContainer = compose(\n//   connect(mapStateToProps),\n//   WithSpinner,\n// )(CollectionOverview);\n// export default CollectionOverviewContainer;","map":{"version":3,"sources":["/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/src/components/collection-overview/collection-overview.container.jsx"],"names":["React","Query","gql","CollectionOverview","Spinner","GET_COLLECTIONS","CollectionOverviewContainer","loading","error","data","console","log","collections"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,IAAMC,eAAe,GAAGH,GAAH,mBAArB;;AAeA,IAAMI,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA,SAClC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAA8B;AAAA,QAA3BE,OAA2B,QAA3BA,OAA2B;AAAA,QAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,MAAAA,OAAO,EAAPA;AAAF,KAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,MAAAA,KAAK,EAALA;AAAF,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA,IAAI,EAAJA;AAAF,KAAZ;AACA,QAAIF,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACb,WAAO,oBAAC,kBAAD;AAAoB,MAAA,WAAW,EAAEE,IAAI,CAACG,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAPH,CADkC;AAAA,CAApC;;AAYA,eAAeN,2BAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport CollectionOverview from './collection-overview.component';\nimport Spinner from '../spinner/spinner.component';\n\nconst GET_COLLECTIONS = gql`\n  {\n    collections {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionOverviewContainer = () => (\n  <Query query={GET_COLLECTIONS}>\n    {({ loading, error, data }) => {\n      console.log({ loading });\n      console.log({ error });\n      console.log({ data });\n      if (loading) return <Spinner />;\n      return <CollectionOverview collections={data.collections} />;\n    }}\n  </Query>\n);\n\nexport default CollectionOverviewContainer;\n\n// import { connect } from 'react-redux';\n// import { compose } from 'redux';\n// import { createStructuredSelector } from 'reselect';\n// import { selectIsCollectionFetching } from '../../redux/shop/shop.selector';\n// import WithSpinner from '../../hoc/with-spinner/with-spinner.component';\n// import CollectionOverview from './collection-overview.component';\n\n// const mapStateToProps = createStructuredSelector({\n//   isLoading: selectIsCollectionFetching,\n// });\n\n// const CollectionOverviewContainer = compose(\n//   connect(mapStateToProps),\n//   WithSpinner,\n// )(CollectionOverview);\n\n// export default CollectionOverviewContainer;\n"]},"metadata":{},"sourceType":"module"}