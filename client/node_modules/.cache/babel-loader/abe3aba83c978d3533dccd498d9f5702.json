{"ast":null,"code":"var _jsxFileName = \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport './cart-dropdown.styles.scss';\nimport Button from '../button/button.component';\nimport CartItem from '../cart-item/cart-item.component';\n\nvar Cart = function Cart(_ref) {\n  var cartItems = _ref.cartItems,\n      history = _ref.history;\n  return React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, cartItems.length ? cartItems.map(function (item) {\n    return React.createElement(CartItem, {\n      key: item.id,\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  }) : React.createElement(\"span\", {\n    className: \"empty-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Your cart is empty\")), React.createElement(Button, {\n    onClick: function onClick() {\n      return history.push('/checkout');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"GO TO CHECKOUT\"));\n};\n\nvar mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(Cart));","map":{"version":3,"sources":["/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","selectCartItems","createStructuredSelector","withRouter","Button","CartItem","Cart","cartItems","history","length","map","item","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,6BAAP;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,OAAd,QAAcA,OAAd;AAAA,SACX;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,CAACE,MAAV,GACCF,SAAS,CAACG,GAAV,CAAc,UAAAC,IAAI;AAAA,WAAI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAAlB,CADD,GAGC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,CADF,EASE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMH,OAAO,CAACK,IAAR,CAAa,WAAb,CAAN;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADW;AAAA,CAAb;;AAcA,IAAMC,eAAe,GAAGZ,wBAAwB,CAAC;AAC/CK,EAAAA,SAAS,EAAEN;AADoC,CAAD,CAAhD;AAIA,eAAeE,UAAU,CAACH,OAAO,CAACc,eAAD,CAAP,CAAyBR,IAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport './cart-dropdown.styles.scss';\n\nimport Button from '../button/button.component';\nimport CartItem from '../cart-item/cart-item.component';\n\nconst Cart = ({ cartItems, history }) => (\n  <div className='cart-dropdown'>\n    <div className='cart-items'>\n      {cartItems.length ? (\n        cartItems.map(item => <CartItem key={item.id} item={item} />)\n      ) : (\n        <span className='empty-message'>Your cart is empty</span>\n      )}\n    </div>\n\n    <Button onClick={() => history.push('/checkout')}>GO TO CHECKOUT</Button>\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n});\n\nexport default withRouter(connect(mapStateToProps)(Cart));\n"]},"metadata":{},"sourceType":"module"}