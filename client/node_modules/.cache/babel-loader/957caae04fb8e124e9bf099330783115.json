{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/src/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query{\\n  collections{\\n    title\\n  }\\n}\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ApolloProvider } from 'react-apollo';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport { persistor, store } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nvar httpLink = createHttpLink({\n  uri: 'https://http://localhost:4000/'\n});\nvar cache = new InMemoryCache();\nvar client = new ApolloClient({\n  link: httpLink,\n  cache: cache\n});\nclient.query({\n  query: gql(_templateObject())\n}).then(console.log);\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(PersistGate, {\n  persistor: persistor,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}))))), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Provider","ApolloProvider","createHttpLink","InMemoryCache","ApolloClient","gql","persistor","store","PersistGate","App","serviceWorker","httpLink","uri","cache","client","link","query","then","console","log","render","document","getElementById","unregister"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,YAAT,EAAuBC,GAAvB,QAAkC,cAAlC;AAEA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,eAAjC;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,IAAMC,QAAQ,GAAGT,cAAc,CAAC;AAC9BU,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAGA,IAAMC,KAAK,GAAG,IAAIV,aAAJ,EAAd;AACA,IAAMW,MAAM,GAAG,IAAIV,YAAJ,CAAiB;AAC9BW,EAAAA,IAAI,EAAEJ,QADwB;AAE9BE,EAAAA,KAAK,EAALA;AAF8B,CAAjB,CAAf;AAKAC,MAAM,CAACE,KAAP,CAAa;AACXA,EAAAA,KAAK,EAAEX,GAAF;AADM,CAAb,EAQGY,IARH,CAQQC,OAAO,CAACC,GARhB;AASArB,QAAQ,CAACsB,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEN,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAED,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,CADF,EAWEe,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAXF;AAcAZ,aAAa,CAACa,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ApolloProvider } from 'react-apollo';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient, gql } from 'apollo-boost';\n\nimport { persistor, store } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst httpLink = createHttpLink({\n  uri: 'https://http://localhost:4000/',\n});\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({\n  link: httpLink,\n  cache,\n});\n\nclient.query({\n  query: gql`\n  query{\n  collections{\n    title\n  }\n}\n  `\n}).then(console.log)\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <BrowserRouter>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </ApolloProvider>,\n\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}