{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/src/pages/collection/collection.container.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getCollectionsByTitle($title: String!) {\\n    getCollectionsByTitle(title: $title) {\\n      id\\n      title\\n      items {\\n        id\\n        name\\n        price\\n        imageUrl\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport Spinner from '../../components/spinner/spinner.component';\nimport Collection from './collection.component';\nvar GET_COLLECTION_BY_TITLE = gql(_templateObject());\n\nvar CollectionContainer = function CollectionContainer(_ref) {\n  var match = _ref.match;\n  return React.createElement(Query, {\n    query: GET_COLLECTION_BY_TITLE,\n    variables: {\n      title: match.params.collectionId\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, function (_ref2) {\n    var loading = _ref2.loading,\n        getCollectionsByTitle = _ref2.data.getCollectionsByTitle;\n    if (loading) return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n    return React.createElement(Collection, {\n      collection: getCollectionsByTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  });\n};\n\nexport default CollectionContainer; // import { connect } from 'react-redux';\n// import { compose } from 'redux';\n// import { createStructuredSelector } from 'reselect';\n// import { selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\n// import WithSpinner from '../../hoc/with-spinner/with-spinner.component';\n// import Collection from './collection.component';\n// const mapStateToProps = createStructuredSelector({\n//   isLoading: state => !selectIsCollectionsLoaded(state),\n// });\n// const CollectionContainer = compose(\n//   connect(mapStateToProps),\n//   WithSpinner,\n// )(Collection);\n// export default CollectionContainer;","map":{"version":3,"sources":["/Users/thomasvu/Downloads/Coding/Deployed/React Apps/e-commerce/client/src/pages/collection/collection.container.jsx"],"names":["React","Query","gql","Spinner","Collection","GET_COLLECTION_BY_TITLE","CollectionContainer","match","title","params","collectionId","loading","getCollectionsByTitle","data"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,IAAMC,uBAAuB,GAAGH,GAAH,mBAA7B;;AAcA,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAC1B,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEF,uBADT;AAEE,IAAA,SAAS,EAAE;AAAEG,MAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AAAtB,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,iBAAkD;AAAA,QAA/CC,OAA+C,SAA/CA,OAA+C;AAAA,QAA9BC,qBAA8B,SAAtCC,IAAsC,CAA9BD,qBAA8B;AACjD,QAAID,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACb,WAAO,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAEC,qBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAPH,CAD0B;AAAA,CAA5B;;AAYA,eAAeN,mBAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport Spinner from '../../components/spinner/spinner.component';\nimport Collection from './collection.component';\n\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\nconst CollectionContainer = ({ match }) => (\n  <Query\n    query={GET_COLLECTION_BY_TITLE}\n    variables={{ title: match.params.collectionId }}\n  >\n    {({ loading, data: { getCollectionsByTitle } }) => {\n      if (loading) return <Spinner />;\n      return <Collection collection={getCollectionsByTitle} />;\n    }}\n  </Query>\n);\n\nexport default CollectionContainer;\n// import { connect } from 'react-redux';\n// import { compose } from 'redux';\n// import { createStructuredSelector } from 'reselect';\n// import { selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\n// import WithSpinner from '../../hoc/with-spinner/with-spinner.component';\n// import Collection from './collection.component';\n\n// const mapStateToProps = createStructuredSelector({\n//   isLoading: state => !selectIsCollectionsLoaded(state),\n// });\n\n// const CollectionContainer = compose(\n//   connect(mapStateToProps),\n//   WithSpinner,\n// )(Collection);\n\n// export default CollectionContainer;\n"]},"metadata":{},"sourceType":"module"}